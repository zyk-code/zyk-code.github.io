import{_ as s,c as i,o as a,a5 as e}from"./chunks/framework.D_DqNR2H.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"note/deep learning/基本及常见错误.md","filePath":"note/deep learning/基本及常见错误.md","lastUpdated":1730302091000}'),n={name:"note/deep learning/基本及常见错误.md"},t=e(`<h2 id="pip更换镜像源" tabindex="-1">pip更换镜像源 <a class="header-anchor" href="#pip更换镜像源" aria-label="Permalink to &quot;pip更换镜像源&quot;">​</a></h2><p>清华源</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global.index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pypi.tuna.tsinghua.edu.cn/simple</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="安装pytorch" tabindex="-1">安装pytorch <a class="header-anchor" href="#安装pytorch" aria-label="Permalink to &quot;安装pytorch&quot;">​</a></h2><p>常用的环境 CUDA12.1 + torch2.2</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torch==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.2.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchvision==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.17.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchaudio==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.2.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.pytorch.org/whl/cu121</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>CUDA11.3+torch1.12</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torch==1.12.1+cu113</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchvision==0.13.1+cu113</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torchaudio==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.12.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --extra-index-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.pytorch.org/whl/cu113</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="检测torch和cuda" tabindex="-1">检测Torch和CUDA <a class="header-anchor" href="#检测torch和cuda" aria-label="Permalink to &quot;检测Torch和CUDA&quot;">​</a></h2><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> torch</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(torch.cuda.device_count())  # 可用gpu数量</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(torch.cuda.is_available())  # 是否可用gpu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="无法指定gpu" tabindex="-1">无法指定GPU <a class="header-anchor" href="#无法指定gpu" aria-label="Permalink to &quot;无法指定GPU&quot;">​</a></h2><p>该问题在旧版本的v8出现，解决方法如下： 在使用 --nproc_per_node 参数时，如果有四个 GPU，但不想使用 GPU 1，可以使用 CUDA_VISIBLE_DEVICES 环境变量来限制可见的 GPU。</p><p><code>CUDA_VISIBLE_DEVICES=0,2,3 python training.py --nproc_per_node=3</code></p><p><code>CUDA_VISIBLE_DEVICES=1 python train.py --nproc_per_node=1</code></p><p>在这个例子中，CUDA_VISIBLE_DEVICES 设置了可见的 GPU，排除了 GPU 1。然后，--nproc_per_node=3 指定了每个节点（即每台机器）上使用的 GPU 数量。这样就可以指定gpu训练了</p>`,15),p=[t];function l(h,r,d,o,c,k){return a(),i("div",null,p)}const g=s(n,[["render",l]]);export{F as __pageData,g as default};
