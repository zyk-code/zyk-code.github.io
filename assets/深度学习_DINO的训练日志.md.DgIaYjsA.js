import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.A_45CHVO.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"深度学习/DINO的训练日志.md","filePath":"深度学习/DINO的训练日志.md","lastUpdated":1731859578000}'),e={name:"深度学习/DINO的训练日志.md"},l=n(`<h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><p>1、配环境和安装torch和torchvison(注意和CUDA版本对应)</p><p>2、编译 CUDA operators</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> models/dino/ops</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或 sh make.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># unit test (should see all checking is True)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试 会报内存溢出错误，正常</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test.py</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../../..</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="训练" tabindex="-1">训练 <a class="header-anchor" href="#训练" aria-label="Permalink to &quot;训练&quot;">​</a></h2><p>1、先要配置<code>./config/DINO</code>下的文件中选择一个符合需求的文件进行配置，如<code>DINO_4scale.py</code>下的<code>dn_labelbook_size </code>和 <code>num_classes</code>配置为你数据集的类别数**+1**（因为会把背景当作另外的一个类）。</p><p>2、修改<code>models/dino.py</code>716行</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">match_unstable_error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> args.match_unstable_error</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dn_labelbook_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> args.dn_labelbook_size</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dn_labelbook_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num_classes:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dn_labelbook_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num_classes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>3、通过命令行启动(可以更换不同的骨干网络) -c 跟1中的配置文件 -coco_path 是数据集合的目录路径（相对路径可能会失效）</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./logs/DINO/R50_IP102_finetune</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./config/DINO/DINO_4scale.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --coco_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/桌面/Detection/DINO/URPC2020_old_coco</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --options</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dn_scalar=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> embed_init_tgt=TRUE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dn_label_coef=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dn_bbox_coef=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use_ema=False</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dn_box_noise_scale=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">​</a></h2><p>1、编译不通过 原因：CUDA版本和Pytoch版本的关系。通常在pytoch官网会给出每个pytoch和cuda对应版本的安装，当本地cuda版本与之不对应时，不会影响无需经过cuda编译的模块。当需要使用cuda编译模块（可变形卷积、可变形注意力等）时，否则会报错导致编译不通过，本地安装失败无法运行后续代码。 解决方法：安装和CUDA版本对应的pytorch（可以直接安装whl包）</p><p>2、很多的包没有安装上 解决方法：<code>pip install 包名</code> 3、报错在<code>DINO/util/slconfig.py</code>317行 解决方法：修改成下面的代码。在社区里有issue提到，跟<code>yapf</code>的版本有关。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># text, _ = FormatCode(text, style_config=yapf_style, verify=True)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text, _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FormatCode(text, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">style_config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yapf_style) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#, verify=True</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,14),p=[l];function t(h,k,r,d,o,c){return a(),i("div",null,p)}const F=s(e,[["render",t]]);export{y as __pageData,F as default};
