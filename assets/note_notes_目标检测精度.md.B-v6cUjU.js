import{_ as e,c as a,o as t,a5 as o}from"./chunks/framework.D_DqNR2H.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"note/notes/目标检测精度.md","filePath":"note/notes/目标检测精度.md","lastUpdated":1728657589000}'),p={name:"note/notes/目标检测精度.md"},n=o('<h2 id="基本指标" tabindex="-1">基本指标 <a class="header-anchor" href="#基本指标" aria-label="Permalink to &quot;基本指标&quot;">​</a></h2><p>混淆矩阵： 真实情况 预测结果 正例 反例 正例 TP（真正例） FN（假反例） 反例 FP（假正例） TN（真反例）</p><p>P = TP / (TP + FP)</p><p>Precision是针对预测结果而言的，含义是在预测结果中，有多少预测框预测正确了。</p><p>R = TP / (TP + FN)</p><p>Recall是针对原样本而言的，含义是在所有真实目标中，模型预测正确目标的比例。</p><h2 id="fp-和-fn" tabindex="-1">FP 和 FN <a class="header-anchor" href="#fp-和-fn" aria-label="Permalink to &quot;FP 和 FN&quot;">​</a></h2><p>假正例（False Positive，FP）和假反例（False Negative，FN）之间的互补性。</p><p>假正例和假反例分别位于不同的位置，且它们的数量之和反映了模型错误预测的总数。</p><p>假正例会增加预测为正类的样本数量，但其中实际为正类的比例会降低，因此会降低精确度。 假反例会减少被模型正确预测为正类的实际正类样本数量，因此会降低召回率。</p><p>一个假正例（即误诊）可能给患者带来不必要的焦虑和治疗负担。 一个假反例（即漏诊）则可能导致疾病进展和恶化，甚至危及患者生命。</p><p>因此在P-R的关系中两者也是互斥的。</p>',12),s=[n];function _(r,i,c,l,d,P){return t(),a("div",null,s)}const F=e(p,[["render",_]]);export{f as __pageData,F as default};
