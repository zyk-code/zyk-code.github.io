import{_ as e,c as o,o as d,a5 as a}from"./chunks/framework.B8yXsRpI.js";const b=JSON.parse('{"title":"GDB","description":"","frontmatter":{},"headers":[],"relativePath":"C++/GDB.md","filePath":"C++/GDB.md","lastUpdated":1731859578000}'),c={name:"C++/GDB.md"},t=a('<h1 id="gdb" tabindex="-1">GDB <a class="header-anchor" href="#gdb" aria-label="Permalink to &quot;GDB&quot;">​</a></h1><p>gdb是一个调试工具。</p><p>如希望程序可调试，编译时需加 <code>-g</code> 选项且不可使用优化选项 <code>-O</code>。</p><h4 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h4><p>1、通过yum安装 <code>yum -y install gdb</code>。</p><p>2、本地编译安装。</p><h4 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h4><p>通过 <code>gdb demo</code> 进入demo程序的调试过程。</p><h4 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h4><p>1、<code>set args a b</code> 设置参数 a b ,可以多个参数。</p><p>2、<code>break</code> 可以简写为 <code>b</code>，设置断点，跟行号即可。例如: <code>b 12</code>，即在第12行设置断点。</p><p>3、<code>run</code> 可简写为 <code>r</code>，开始运行程序，至断点处停止，如无断点直至程序结束。</p><p>4、<code>next</code> 可简写为 <code>n</code>，执行当前行语句，如该语句为函数，不会进入函数内部。</p><p>5、<code>step</code> 可简写为 <code>s</code>，执行当前行语句，会进入函数内部，但无法进入第三方库的函数。（需要有源码）。</p><p>6、<code>continue</code> 可以简写为 <code>c</code>，继续运行程序。</p><p>7、<code>print</code> 可以简写为 <code>p</code>，显示变量或表达式，如为表达式会执行表达式并显示结果。</p><p>8、<code>quit</code> 可以简写为 <code>q</code>，即退出gdb</p><p>9、<code>set var</code> 设置变量，可以改变 变量的值，通过 <code>p a=1</code>也可同样实现。</p><h4 id="core文件调试" tabindex="-1">core文件调试 <a class="header-anchor" href="#core文件调试" aria-label="Permalink to &quot;core文件调试&quot;">​</a></h4><p>linux 缺省时不会生成core文件需要配置。配置方法 <code>ulimit -a</code> 查看对应参数，修改参数可以根据 -a 查询对应名字操作 <code>ulimit -c ulimit</code> 。此时出现段错误时，可通过 <code>gdb core.dong</code> 进行调试了。</p><h4 id="调试运行中的程序" tabindex="-1">调试运行中的程序 <a class="header-anchor" href="#调试运行中的程序" aria-label="Permalink to &quot;调试运行中的程序&quot;">​</a></h4><p>调试运行中的程序，需要得到进程编号 <code>1111</code>。可通过 <code>gdb demo -p 111</code> 进行调试操作。</p>',22),r=[t];function p(i,n,l,s,h,_){return d(),o("div",null,r)}const m=e(c,[["render",p]]);export{b as __pageData,m as default};
