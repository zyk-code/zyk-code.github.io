import{_ as a,c as e,o as t,a5 as o}from"./chunks/framework.D_DqNR2H.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"note/c++/操作系统.md","filePath":"note/c++/操作系统.md","lastUpdated":1731253741000}'),r={name:"note/c++/操作系统.md"},n=o('<h2 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-label="Permalink to &quot;操作系统&quot;">​</a></h2><p>OS是管理软件的一种软件</p><p>C程序与可以看成是一种状态机。因为每一步程序的执行都会是状态的变化，其中状态包括函数的栈帧、变量的值、PC等。</p><p>状态机是一个状态的集合，状态之间通过转移，来完成一个任务的过程。通俗的理解：A -&gt; B -&gt; C 就是一个简单的状态机。</p><p>系统调用（syscall）：系统处理状态转换的一种方式（本质也是一种状态机）。在不同平台实现的方式对应的不同汇编指令不同，存储系统调用参数的寄存器也不同，这是不同架构间的区别。</p><h2 id="线程-进程" tabindex="-1">线程/进程 <a class="header-anchor" href="#线程-进程" aria-label="Permalink to &quot;线程/进程&quot;">​</a></h2><h2 id="锁" tabindex="-1">锁 <a class="header-anchor" href="#锁" aria-label="Permalink to &quot;锁&quot;">​</a></h2><h3 id="自旋锁" tabindex="-1">自旋锁 <a class="header-anchor" href="#自旋锁" aria-label="Permalink to &quot;自旋锁&quot;">​</a></h3><h3 id="互斥锁" tabindex="-1">互斥锁 <a class="header-anchor" href="#互斥锁" aria-label="Permalink to &quot;互斥锁&quot;">​</a></h3>',9),s=[n];function c(i,l,h,_,d,p){return t(),e("div",null,s)}const f=a(r,[["render",c]]);export{m as __pageData,f as default};
